---
- name: Check K3s roles
  debug:
    msg: "{{ ansible_host }}: {{ k3s_role }}"

- name: Check if K3s is installed
  shell: test -x /usr/local/bin/k3s
  register: k3s_info
  delegate_to: picluster-01.home.lan
  changed_when: false

- name: Register if we're installing K3s
  set_fact:
    new_k3s_install: "{{ k3s_info.rc == 1 }}"

- name: Download K3s script
  uri:
    url: https://get.k3s.io/
    return_content: yes
  register: k3s_install
  delegate_to: localhost
  become: false
  run_once: true
  when: new_k3s_install

- name: Add script to nodes
  copy:
    content: "{{ k3s_install.content }}"
    dest: "/tmp/k3s_install"
    owner: root
    group: root
    mode: "0500"
  when: new_k3s_install

- name: Add configurations to leader
  when: k3s_role == 'leader'
  block:
  - name: Add manifests to leader
    copy:
      src: "{{ item }}"
      dest: "/var/lib/rancher/k3s/server/manifests/"
      owner: root
      group: root
      mode: "0400"
    with_fileglob:
      - files/manifests/*.yaml

  - name: Add OTEL config to leader
    copy:
      src: files/tracing/kubeapiserver-otlp.yaml
      dest: "/etc/rancher/k3s/kubeapiserver-otlp.yaml"
      owner: root
      group: root
      mode: "0400"

- name: Tasks to initialize leader
  when: k3s_role == 'leader' and new_k3s_install
  block:
  - name: Create join token
    shell: openssl rand -base64 30
    register: node_token
    run_once: true
    delegate_to: localhost
    become: false

  - name: Initialize leader
    command: /tmp/k3s_install --flannel-backend none --disable traefik --disable local-storage --disable coredns --kubelet-arg system-reserved=cpu=1,memory=1024Mi server
    environment:
      K3S_TOKEN: "{{ node_token.stdout if new_k3s_install }}"
      INSTALL_K3S_VERSION: "{{ k3s_version }}"
    delegate_to: "{{ item }}"
    loop: "{{ groups['picluster_leader'] }}"

  - name: Get leader token
    command: cat /var/lib/rancher/k3s/server/token
    register: new_local_token
    delegate_to: "{{ item }}"
    loop: "{{ groups['picluster_leader'] }}"
    run_once: true
  
  - name: Register leader token
    set_fact:
      new_token: "{{ new_local_token.results[0].stdout }}"
    delegate_to: "{{ item }}"
    loop: "{{ groups['picluster_leader'] }}"
    run_once: true

  - name: Wait to stabilize
    command: sleep 10
    delegate_to: 127.0.0.1
    become: false

- name: Ensure SystemD services are up-to-date
  block:
    - name: K3s SystemD service
      copy:
        src: files/systemd/k3s.service
        dest: /etc/systemd/system/k3s.service
        owner: root
        group: root
        mode: "0400"
      notify:
        - Reload systemd service
    - name: K3s SystemD service environment file
      copy:
        src: files/systemd/k3s.service.env
        dest: /etc/systemd/system/k3s.service.env
        owner: root
        group: root
        mode: "0400"
      when: new_k3s_install == false

- name: Add non-leaders
  when: new_k3s_install
  block:
  - name: Install servers
    command: "/tmp/k3s_install server --tls-san 192.168.1.101 --tls-san picluster-01.home.lan --tls-san picluster-control.home.lan --kube-apiserver-arg=tracing-config-file= "
    environment:
      # K3S_TOKEN: "{{ node_token.stdout if new_k3s_install }}"
      K3S_TOKEN: "{{ new_token }}"
      INSTALL_K3S_VERSION: "{{ k3s_version }}"
    when: k3s_role == 'server'

  - name: Install agents
    command: /tmp/k3s_install agent
    environment:
      K3S_URL: "https://192.168.1.101:6443"
      # K3S_TOKEN: "{{ node_token.stdout if new_k3s_install}}"
      K3S_TOKEN: "{{ new_token }}"
      INSTALL_K3S_VERSION: "{{ k3s_version }}"
    when: k3s_role == 'agent'
