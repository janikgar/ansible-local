---
- name: Get Node Exporter versions
  uri:
    url:  https://api.github.com/repos/prometheus/node_exporter/tags
    body_format: json
  delay: 5
  retries: 5
  until: ne_versions is not failed
  register: ne_versions

- name: Set latest Node Exporter version
  set_fact:
    latest_ne_version:  "{{ ne_versions.json[0].name }}"

- name: Set architecture to download
  set_fact:
    ne_arch:
      armv7l: armv7
      aarch64: arm64
      i386: "386"

- name: Download latest Node Exporter
  uri:
    url: "https://github.com/prometheus/node_exporter/releases/download/{{ latest_ne_version }}/node_exporter-{{ latest_ne_version[1:]}}.linux-{{ ne_arch[ansible_facts.architecture] }}.tar.gz"
    return_content: yes
  register: node_exporter

- name: Add script to nodes
  copy:
    content: "{{ node_exporter.content }}"
    dest: "/tmp/node-exporter.tar.gz"
    owner: root
    group: root
    mode: "0644"

- name: Stop Node Exporter service (if it exists)
  service:
    name: node-exporter
    state: stopped
  ignore_errors: true

- name: Ensure gzip / unzip are available
  apt:
    name: "{{ item }}"
    state: latest
  with_items:
    - gzip
    - zip

- name: Extract binary
  unarchive:
    src: /tmp/node-exporter.tar.gz
    include:
      - "node_exporter-{{ latest_ne_version[1:] }}.linux-{{ ne_arch[ansible_facts.architecture] }}/node_exporter"
    dest: /usr/local/bin
    remote_src: true
    extra_opts:
      - --strip-components
      - "1"

- name: Create service
  copy:
    src: node-exporter.service
    dest: /etc/systemd/system

- name: Start service
  systemd:
    name: node-exporter
    state: started
    enabled: true
    daemon_reload: true
