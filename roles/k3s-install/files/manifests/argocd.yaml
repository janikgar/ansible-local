apiVersion: helm.cattle.io/v1
kind: HelmChart
metadata:
  name: argocd
  namespace: kube-system
spec:
  repo: https://argoproj.github.io/argo-helm
  chart: argo-cd
  targetNamespace: argocd
  version: "6.5.1"
  valuesContent: |-
    global:
      image:
        tag: v2.10.2
    applicationSet:
      metrics:
        enabled: true
        serviceMonitor:
          enabled: true
    configs:
      cm:
        create: true
        url: https://argocd.home.lan
        dex.config: |
          connectors:
          - config:
              issuer: https://authentik.home.lan/application/o/argocd/
              clientID: 658578a26fd391df56029e6d61c0d537a9358cb4
              clientSecret: $dex.authentik.clientSecret
              insecureEnableGroups: true
              scopes:
                - openid
                - profile
                - email
            name: authentik
            type: oidc
            id: authentik
        admin.enabled: "true"
        application.instanceLabelKey: argocd.argoproj.io/instance
        exec.enabled: "false"
        resource.compareoptions: |
          ignoreDifferencesOnResourceUpdates: true
        resource.customizations.ignoreResourceUpdates.all: |
          jsonPointers:
            - /status
        resource.customizations.ignoreResourceUpdates.argoproj.io_Application: |
          jsonPointers:
            - /metadata/generation
            - /metadata/resourceVersion
        resource.customizations.ignoreResourceUpdates.job: |
          jqPathExpressions:
            - '.'
        resource.customizations.ignoreResourceUpdates.cilium.io_CiliumEndpoint: |
          jqPathExpressions:
            - '.'
        resource.ignoreResourceUpdatesEnabled: "true"
        server.rbac.log.enforce.enable: "false"
        timeout.hard.reconciliation: 0s
        timeout.reconciliation: 180s
      params:
        create: true
        controller.operation.processors: "5"
        controller.status.processors: "2"
        controller.kubectl.parallelism.limit: "10"
        server.insecure: "true"
      rbac:
        policy.csv: |-
          p, role:org-admin, applications, *, */*, allow
          p, role:org-admin, clusters, *, */*, allow
          p, role:org-admin, respositories, *, */*, allow
          p, role:org-admin, logs, *, */*, allow
          p, role:org-admin, exec, *, */*, allow
          g, project_admin, role:org-admin
          p, backstage, applications, get, */*, allow
    server:
      url: https://argocd.home.lan
      ingress:
        enabled: true
        ingressClassName: nginx
        hostname: argocd.home.lan
        tls: enabled
        annotations:
          cert-manager.io/cluster-issuer: vault-issuer
          cert-manager.io/common-name: argocd.home.lan
      metrics:
        enabled: true
        serviceMonitor:
          enabled: true
    repoServer:
      metrics:
        enabled: true
        serviceMonitor:
          enabled: true
    controller:
      resources:
        requests:
          cpu: 250m
          memory: 384Mi
        limits:
          cpu: 500m
          memory: 512Mi
      metrics:
        enabled: true
        serviceMonitor:
          enabled: true
    dex:
      image:
        tag: v2.37.0
      volumeMounts:
        - mountPath: /etc/ssl/certs
          name: certs
          readOnly: true
      volumes:
        - hostPath:
            path: /etc/ssl/certs
          name: certs
      metrics:
        enabled: true
        serviceMonitor:
          enabled: true
    redis:
      image:
        tag: 7.2.4-alpine
      metrics:
        enabled: true
        serviceMonitor:
          enabled: true
    repositories:
      all:
        url: git@github.com:janikgar/home-k8s.git
        type: git
      semaphore:
        url: git@github.com:janikgar/semaphore-home-k8s.git
        type: git
    credentialTemplates:
      gitssh:
        url: git@github.com:janikgar/home-k8s.git
        sshPrivateKey: |
          REPLACE WITH APPROPRIATE KEY
      gitssh2:
        url: git@github.com:janikgar/semaphore-home-k8s.git
        sshPrivateKey: |
          REPLACE WITH APPROPRIATE KEY
    notifications:
      notifiers:
        service.webhook.consul-app-version: |
          url: https://consul.home.lan/v1/kv/
          service.alertmanager: |
            targets:
              - alertmanager-operated.prometheus.svc.cluster.local:9093
      metrics:
        enabled: true
        serviceMonitor:
          enabled: true
      templates:
        template.alertmanager-notification: |
          message: "Application {{.app.metadata.name}} has update. Status: {{.app.status.sync.status}}, Health: {{.app.status.health.status}}"
          alertmanager:
            generatorURL: "https://argocd.home.lan/applications/argocd/{{.app.metadata.name}}"
            labels:
              origin: argocd
              app: "{{.app.metadata.name}}"
              namespace: argocd
              destNamespace: "{{.app.spec.destination.namespace}}"
              status: "{{.app.status.sync.status}}"
              health: "{{.app.status.health.status}}"
              revision: "{{.app.status.sync.revision}}"
        template.app-version-notification: |
          webhook:
            consul-app-version:
              method: PUT
              path: /argocd-versions/{{.app.metadata.name}}
              body: |
                {"deployed_version": "{{.app.status.sync.revision}}"}
      triggers:
        trigger.on-is-deployed: |
          - when: app.status.sync.status == 'Synced' and app.status.health.status == 'Healthy'
            send: [app-version-notification, alertmanager-notification]
