---
- name: Check K3s roles
  ansible.builtin.debug:
    msg: "{{ ansible_host }}: {{ k3s_role }}"

- name: Check if K3s is installed
  ansible.builtin.command: test -x /usr/local/bin/k3s
  register: k3s_info
  changed_when: false
  failed_when: false

- name: Register if we're installing K3s
  ansible.builtin.set_fact:
    new_k3s_install: "{{ k3s_info.rc == 1 }}"

- name: Download K3s script
  ansible.builtin.uri:
    url: https://get.k3s.io/
    return_content: true
  register: k3s_install
  delegate_to: localhost
  become: false
  run_once: true
  when: new_k3s_install

- name: Add script to nodes
  ansible.builtin.copy:
    content: "{{ k3s_install.content }}"
    dest: "/tmp/k3s_install"
    owner: root
    group: root
    mode: "0500"
  when: new_k3s_install

- name: Add configurations to leader
  when: k3s_role == 'leader'
  block:
    - name: Add manifests to leader
      ansible.builtin.copy:
        src: "{{ item }}"
        dest: "/var/lib/rancher/k3s/server/manifests/"
        owner: root
        group: root
        mode: "0400"
      with_fileglob:
        - files/manifests/*.yaml

    - name: Add OTEL config to leader
      ansible.builtin.copy:
        src: files/tracing/kubeapiserver-otlp.yaml
        dest: "/etc/rancher/k3s/kubeapiserver-otlp.yaml"
        owner: root
        group: root
        mode: "0400"

- name: Tasks to initialize leader
  when: k3s_role == 'leader' and new_k3s_install
  block:
    - name: Create join token
      ansible.builtin.command: openssl rand -base64 30
      register: node_token
      run_once: true
      delegate_to: localhost
      become: false
      changed_when: true

    - name: Initialize leader
      ansible.builtin.command: |
        /tmp/k3s_install --flannel-backend none --disable traefik --disable coredns \
        --kubelet-arg system-reserved=cpu=1000m,memory=1792Mi
      environment:
        K3S_TOKEN: "{{ node_token.stdout if new_k3s_install }}"
        INSTALL_K3S_VERSION: "{{ k3s_version }}"
      delegate_to: "{{ item }}"
      loop: "{{ groups['picluster_leader'] }}"
      changed_when: true

    - name: Wait to stabilize
      ansible.builtin.command: sleep 10
      delegate_to: 127.0.0.1
      become: false
      changed_when: false

- name: Get leader token
  ansible.builtin.command: cat /var/lib/rancher/k3s/server/token
  register: new_local_token
  delegate_to: picluster-01.home.lan
  run_once: true
  changed_when: true

- name: Register leader token
  ansible.builtin.set_fact:
    new_token: "{{ new_local_token.stdout }}"
  delegate_to: picluster-01.home.lan
  run_once: true

- name: Ensure SystemD services are up-to-date
  when: k3s_role == 'leader'
  block:
    - name: Sysctl config
      ansible.builtin.copy:
        src: files/sysctl/90-kubelet.conf
        dest: /etc/sysctl.d
        owner: root
        group: root
        mode: "0400"
    - name: K3s SystemD service
      ansible.builtin.copy:
        src: files/systemd/k3s.service
        dest: /etc/systemd/system/k3s.service
        owner: root
        group: root
        mode: "0400"
      notify:
        - Reload k3s systemd service
    - name: K3s SystemD service environment file
      ansible.builtin.copy:
        src: files/systemd/k3s.service.env
        dest: /etc/systemd/system/k3s.service.env
        owner: root
        group: root
        mode: "0400"
      when: not new_k3s_install

- name: Add non-leaders
  when: new_k3s_install
  block:
    - name: Install servers
      ansible.builtin.command: |
        /tmp/k3s_install server \
          --tls-san 192.1628.1.101 \
          --tls-san picluster-01.home.lan \
          --tls-san picluster-control.home.lan \
          --kube-apiserver-arg=tracing-config-file=
      environment:
        K3S_TOKEN: "{{ new_token }}"
        INSTALL_K3S_VERSION: "{{ k3s_version }}"
      when: k3s_role == 'server'
      changed_when: true

    - name: Install agents
      ansible.builtin.command: /tmp/k3s_install agent
      environment:
        K3S_URL: "https://192.168.1.101:6443"
        K3S_TOKEN: "{{ new_token }}"
        INSTALL_K3S_VERSION: "{{ k3s_version }}"
      when: k3s_role == 'agent'
      changed_when: true

- name: Remove /etc/cni/net.d
  ansible.builtin.file:
    state: absent
    path: /etc/cni/net.d

- name: Link new /etc/cni/net.d
  ansible.builtin.file:
    state: link
    force: true
    path: /etc/cni/net.d
    src: /var/lib/rancher/k3s/agent/etc/cni/net.d
  notify:
    - Reload k3s systemd service
    - Reload k3s-agent systemd service

- name: Ensure /opt/cni exists
  ansible.builtin.file:
    state: directory
    path: /opt/cni
    mode: '0755`'

- name: Remove /opt/cni/bin
  ansible.builtin.file:
    state: absent
    path: /opt/cni/bin

- name: Link new /opt/cni/bin
  ansible.builtin.file:
    state: link
    force: true
    path: /opt/cni/bin
    src: /var/lib/rancher/k3s/data/current/bin
  notify:
    - Reload k3s systemd service
    - Reload k3s-agent systemd service
