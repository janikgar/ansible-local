---
- name: Check if IP4 needs changes
  ansible.builtin.shell: |
    set -o pipefail
    update-alternatives --query iptables | grep Value | cut -f2 -d' '
  args:
    executable: /bin/bash
  register: ip4_current
  changed_when: false

- name: Flush NF IP4tables
  ansible.builtin.command: iptables -F
  when: ip4_current.stdout != "/usr/sbin/iptables-legacy"
  changed_when: true

- name: Set IP4Tables to legacy
  community.general.alternatives:
    name: iptables
    path: /usr/sbin/iptables-legacy
  register: ip4_changed
  when: ip4_current.stdout != "/usr/sbin/iptables-legacy"
  notify:
    - Reboot

- name: Check if IP6 needs changes
  ansible.builtin.shell: |
    set -o pipefail
    update-alternatives --query ip6tables | grep Value | cut -f2 -d' '
  args:
    executable: /bin/bash
  register: ip6_current
  changed_when: false

- name: Flush NF IP6tables
  ansible.builtin.command: ip6tables -F
  when: ip6_current.stdout != "/usr/sbin/ip6tables-legacy"
  changed_when: true

- name: Set IP6Tables to legacy
  community.general.alternatives:
    name: ip6tables
    path: /usr/sbin/ip6tables-legacy
  register: ip6_changed
  when: ip6_current.stdout != "/usr/sbin/ip6tables-legacy"
  notify:
    - Reboot
